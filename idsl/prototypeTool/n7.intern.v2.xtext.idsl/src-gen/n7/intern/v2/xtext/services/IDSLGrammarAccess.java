/*
 * generated by Xtext 2.25.0.M1
 */
package n7.intern.v2.xtext.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class IDSLGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class IoTFrameworkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v2.xtext.IDSL.IoTFramework");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cIoTFrameworkAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cIoTFrameworkKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDescriptionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDescriptionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDescriptionEStringParserRuleCall_3_1_0 = (RuleCall)cDescriptionAssignment_3_1.eContents().get(0);
		private final Keyword cDescriptionKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cComponentsAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cComponentsComponentParserRuleCall_4_0_0 = (RuleCall)cComponentsAssignment_4_0.eContents().get(0);
		private final Assignment cComponentsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cComponentsComponentParserRuleCall_4_1_0 = (RuleCall)cComponentsAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cOutputsAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cOutputsOutputParserRuleCall_5_0_0 = (RuleCall)cOutputsAssignment_5_0.eContents().get(0);
		private final Assignment cOutputsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cOutputsOutputParserRuleCall_5_1_0 = (RuleCall)cOutputsAssignment_5_1.eContents().get(0);
		private final Keyword cIoTFrameworkKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//IoTFramework:
		//	{IoTFramework}
		//	'<IoTFramework>'
		//	name=EString ('<description>' description=EString '</description>')? (components+=Component components+=Component*)?
		//	(outputs+=Output outputs+=Output*)?
		//	'</IoTFramework>';
		@Override public ParserRule getRule() { return rule; }
		
		//{IoTFramework}
		//'<IoTFramework>'
		//name=EString ('<description>' description=EString '</description>')? (components+=Component components+=Component*)?
		//(outputs+=Output outputs+=Output*)?
		//'</IoTFramework>'
		public Group getGroup() { return cGroup; }
		
		//{IoTFramework}
		public Action getIoTFrameworkAction_0() { return cIoTFrameworkAction_0; }
		
		//'<IoTFramework>'
		public Keyword getIoTFrameworkKeyword_1() { return cIoTFrameworkKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//('<description>' description=EString '</description>')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'<description>'
		public Keyword getDescriptionKeyword_3_0() { return cDescriptionKeyword_3_0; }
		
		//description=EString
		public Assignment getDescriptionAssignment_3_1() { return cDescriptionAssignment_3_1; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_3_1_0() { return cDescriptionEStringParserRuleCall_3_1_0; }
		
		//'</description>'
		public Keyword getDescriptionKeyword_3_2() { return cDescriptionKeyword_3_2; }
		
		//(components+=Component components+=Component*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//components+=Component
		public Assignment getComponentsAssignment_4_0() { return cComponentsAssignment_4_0; }
		
		//Component
		public RuleCall getComponentsComponentParserRuleCall_4_0_0() { return cComponentsComponentParserRuleCall_4_0_0; }
		
		//components+=Component*
		public Assignment getComponentsAssignment_4_1() { return cComponentsAssignment_4_1; }
		
		//Component
		public RuleCall getComponentsComponentParserRuleCall_4_1_0() { return cComponentsComponentParserRuleCall_4_1_0; }
		
		//(outputs+=Output outputs+=Output*)?
		public Group getGroup_5() { return cGroup_5; }
		
		//outputs+=Output
		public Assignment getOutputsAssignment_5_0() { return cOutputsAssignment_5_0; }
		
		//Output
		public RuleCall getOutputsOutputParserRuleCall_5_0_0() { return cOutputsOutputParserRuleCall_5_0_0; }
		
		//outputs+=Output*
		public Assignment getOutputsAssignment_5_1() { return cOutputsAssignment_5_1; }
		
		//Output
		public RuleCall getOutputsOutputParserRuleCall_5_1_0() { return cOutputsOutputParserRuleCall_5_1_0; }
		
		//'</IoTFramework>'
		public Keyword getIoTFrameworkKeyword_6() { return cIoTFrameworkKeyword_6; }
	}
	public class ComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v2.xtext.IDSL.Component");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cComponent_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDataProviderParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDataProcessorParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Component:
		//	Component_Impl | DataProvider | DataProcessor;
		@Override public ParserRule getRule() { return rule; }
		
		//Component_Impl | DataProvider | DataProcessor
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Component_Impl
		public RuleCall getComponent_ImplParserRuleCall_0() { return cComponent_ImplParserRuleCall_0; }
		
		//DataProvider
		public RuleCall getDataProviderParserRuleCall_1() { return cDataProviderParserRuleCall_1; }
		
		//DataProcessor
		public RuleCall getDataProcessorParserRuleCall_2() { return cDataProcessorParserRuleCall_2; }
	}
	public class Component_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v2.xtext.IDSL.Component_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cComponentAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cComponentKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cSamplingRateKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSamplingRateAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cSamplingRateEIntParserRuleCall_3_1_0 = (RuleCall)cSamplingRateAssignment_3_1.eContents().get(0);
		private final Keyword cSamplingRateKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cDataAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cDataDataParserRuleCall_4_0_0 = (RuleCall)cDataAssignment_4_0.eContents().get(0);
		private final Assignment cDataAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDataDataParserRuleCall_4_1_0 = (RuleCall)cDataAssignment_4_1.eContents().get(0);
		private final Keyword cComponentKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Component_Impl Component:
		//	{Component}
		//	'<Component>'
		//	name=EString ('<samplingRate>' samplingRate=EInt '</samplingRate>')? (data+=Data data+=Data*)?
		//	'</Component>';
		@Override public ParserRule getRule() { return rule; }
		
		//{Component}
		//'<Component>'
		//name=EString ('<samplingRate>' samplingRate=EInt '</samplingRate>')? (data+=Data data+=Data*)?
		//'</Component>'
		public Group getGroup() { return cGroup; }
		
		//{Component}
		public Action getComponentAction_0() { return cComponentAction_0; }
		
		//'<Component>'
		public Keyword getComponentKeyword_1() { return cComponentKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//('<samplingRate>' samplingRate=EInt '</samplingRate>')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'<samplingRate>'
		public Keyword getSamplingRateKeyword_3_0() { return cSamplingRateKeyword_3_0; }
		
		//samplingRate=EInt
		public Assignment getSamplingRateAssignment_3_1() { return cSamplingRateAssignment_3_1; }
		
		//EInt
		public RuleCall getSamplingRateEIntParserRuleCall_3_1_0() { return cSamplingRateEIntParserRuleCall_3_1_0; }
		
		//'</samplingRate>'
		public Keyword getSamplingRateKeyword_3_2() { return cSamplingRateKeyword_3_2; }
		
		//(data+=Data data+=Data*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//data+=Data
		public Assignment getDataAssignment_4_0() { return cDataAssignment_4_0; }
		
		//Data
		public RuleCall getDataDataParserRuleCall_4_0_0() { return cDataDataParserRuleCall_4_0_0; }
		
		//data+=Data*
		public Assignment getDataAssignment_4_1() { return cDataAssignment_4_1; }
		
		//Data
		public RuleCall getDataDataParserRuleCall_4_1_0() { return cDataDataParserRuleCall_4_1_0; }
		
		//'</Component>'
		public Keyword getComponentKeyword_5() { return cComponentKeyword_5; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v2.xtext.IDSL.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class OutputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v2.xtext.IDSL.Output");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cOutputAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cOutputKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDescriptionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDescriptionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDescriptionEStringParserRuleCall_3_1_0 = (RuleCall)cDescriptionAssignment_3_1.eContents().get(0);
		private final Keyword cDescriptionKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cParametersAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cParametersParameterParserRuleCall_4_0_0 = (RuleCall)cParametersAssignment_4_0.eContents().get(0);
		private final Assignment cParametersAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_4_1_0 = (RuleCall)cParametersAssignment_4_1.eContents().get(0);
		private final Keyword cOutputKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Output:
		//	{Output}
		//	'<Output>'
		//	name=EString ('<description>' description=EString '</description>')? (parameters+=Parameter parameters+=Parameter*)?
		//	'</Output>';
		@Override public ParserRule getRule() { return rule; }
		
		//{Output}
		//'<Output>'
		//name=EString ('<description>' description=EString '</description>')? (parameters+=Parameter parameters+=Parameter*)?
		//'</Output>'
		public Group getGroup() { return cGroup; }
		
		//{Output}
		public Action getOutputAction_0() { return cOutputAction_0; }
		
		//'<Output>'
		public Keyword getOutputKeyword_1() { return cOutputKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//('<description>' description=EString '</description>')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'<description>'
		public Keyword getDescriptionKeyword_3_0() { return cDescriptionKeyword_3_0; }
		
		//description=EString
		public Assignment getDescriptionAssignment_3_1() { return cDescriptionAssignment_3_1; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_3_1_0() { return cDescriptionEStringParserRuleCall_3_1_0; }
		
		//'</description>'
		public Keyword getDescriptionKeyword_3_2() { return cDescriptionKeyword_3_2; }
		
		//(parameters+=Parameter parameters+=Parameter*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_4_0() { return cParametersAssignment_4_0; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_4_0_0() { return cParametersParameterParserRuleCall_4_0_0; }
		
		//parameters+=Parameter*
		public Assignment getParametersAssignment_4_1() { return cParametersAssignment_4_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_4_1_0() { return cParametersParameterParserRuleCall_4_1_0; }
		
		//'</Output>'
		public Keyword getOutputKeyword_5() { return cOutputKeyword_5; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v2.xtext.IDSL.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt ecore::EInt:
		//	'-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class DataElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v2.xtext.IDSL.Data");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDataAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDataKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cDataTypesAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cDataTypesDataTypeParserRuleCall_3_0_0 = (RuleCall)cDataTypesAssignment_3_0.eContents().get(0);
		private final Assignment cDataTypesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDataTypesDataTypeParserRuleCall_3_1_0 = (RuleCall)cDataTypesAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cDataAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cDataDataParserRuleCall_4_0_0 = (RuleCall)cDataAssignment_4_0.eContents().get(0);
		private final Assignment cDataAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDataDataParserRuleCall_4_1_0 = (RuleCall)cDataAssignment_4_1.eContents().get(0);
		private final Keyword cDataKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Data:
		//	{Data}
		//	'<data>'
		//	name=EString (dataTypes+=DataType dataTypes+=DataType*)? (data+=Data data+=Data*)?
		//	'</data>';
		@Override public ParserRule getRule() { return rule; }
		
		//{Data}
		//'<data>'
		//name=EString (dataTypes+=DataType dataTypes+=DataType*)? (data+=Data data+=Data*)?
		//'</data>'
		public Group getGroup() { return cGroup; }
		
		//{Data}
		public Action getDataAction_0() { return cDataAction_0; }
		
		//'<data>'
		public Keyword getDataKeyword_1() { return cDataKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//(dataTypes+=DataType dataTypes+=DataType*)?
		public Group getGroup_3() { return cGroup_3; }
		
		//dataTypes+=DataType
		public Assignment getDataTypesAssignment_3_0() { return cDataTypesAssignment_3_0; }
		
		//DataType
		public RuleCall getDataTypesDataTypeParserRuleCall_3_0_0() { return cDataTypesDataTypeParserRuleCall_3_0_0; }
		
		//dataTypes+=DataType*
		public Assignment getDataTypesAssignment_3_1() { return cDataTypesAssignment_3_1; }
		
		//DataType
		public RuleCall getDataTypesDataTypeParserRuleCall_3_1_0() { return cDataTypesDataTypeParserRuleCall_3_1_0; }
		
		//(data+=Data data+=Data*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//data+=Data
		public Assignment getDataAssignment_4_0() { return cDataAssignment_4_0; }
		
		//Data
		public RuleCall getDataDataParserRuleCall_4_0_0() { return cDataDataParserRuleCall_4_0_0; }
		
		//data+=Data*
		public Assignment getDataAssignment_4_1() { return cDataAssignment_4_1; }
		
		//Data
		public RuleCall getDataDataParserRuleCall_4_1_0() { return cDataDataParserRuleCall_4_1_0; }
		
		//'</data>'
		public Keyword getDataKeyword_5() { return cDataKeyword_5; }
	}
	public class DataProviderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v2.xtext.IDSL.DataProvider");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDataProviderAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDataProviderKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cSamplingRateKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSamplingRateAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cSamplingRateEIntParserRuleCall_3_1_0 = (RuleCall)cSamplingRateAssignment_3_1.eContents().get(0);
		private final Keyword cSamplingRateKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cDataAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cDataDataParserRuleCall_4_0_0 = (RuleCall)cDataAssignment_4_0.eContents().get(0);
		private final Assignment cDataAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDataDataParserRuleCall_4_1_0 = (RuleCall)cDataAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cConnectionsAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cConnectionsConnectionParserRuleCall_5_0_0 = (RuleCall)cConnectionsAssignment_5_0.eContents().get(0);
		private final Assignment cConnectionsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cConnectionsConnectionParserRuleCall_5_1_0 = (RuleCall)cConnectionsAssignment_5_1.eContents().get(0);
		private final Keyword cDataProviderKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//DataProvider:
		//	{DataProvider}
		//	'<DataProvider>'
		//	name=EString ('<samplingRate>' samplingRate=EInt '</samplingRate>')? (data+=Data data+=Data*)?
		//	(connections+=Connection connections+=Connection*)?
		//	'</DataProvider>';
		@Override public ParserRule getRule() { return rule; }
		
		//{DataProvider}
		//'<DataProvider>'
		//name=EString ('<samplingRate>' samplingRate=EInt '</samplingRate>')? (data+=Data data+=Data*)? (connections+=Connection
		//connections+=Connection*)?
		//'</DataProvider>'
		public Group getGroup() { return cGroup; }
		
		//{DataProvider}
		public Action getDataProviderAction_0() { return cDataProviderAction_0; }
		
		//'<DataProvider>'
		public Keyword getDataProviderKeyword_1() { return cDataProviderKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//('<samplingRate>' samplingRate=EInt '</samplingRate>')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'<samplingRate>'
		public Keyword getSamplingRateKeyword_3_0() { return cSamplingRateKeyword_3_0; }
		
		//samplingRate=EInt
		public Assignment getSamplingRateAssignment_3_1() { return cSamplingRateAssignment_3_1; }
		
		//EInt
		public RuleCall getSamplingRateEIntParserRuleCall_3_1_0() { return cSamplingRateEIntParserRuleCall_3_1_0; }
		
		//'</samplingRate>'
		public Keyword getSamplingRateKeyword_3_2() { return cSamplingRateKeyword_3_2; }
		
		//(data+=Data data+=Data*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//data+=Data
		public Assignment getDataAssignment_4_0() { return cDataAssignment_4_0; }
		
		//Data
		public RuleCall getDataDataParserRuleCall_4_0_0() { return cDataDataParserRuleCall_4_0_0; }
		
		//data+=Data*
		public Assignment getDataAssignment_4_1() { return cDataAssignment_4_1; }
		
		//Data
		public RuleCall getDataDataParserRuleCall_4_1_0() { return cDataDataParserRuleCall_4_1_0; }
		
		//(connections+=Connection connections+=Connection*)?
		public Group getGroup_5() { return cGroup_5; }
		
		//connections+=Connection
		public Assignment getConnectionsAssignment_5_0() { return cConnectionsAssignment_5_0; }
		
		//Connection
		public RuleCall getConnectionsConnectionParserRuleCall_5_0_0() { return cConnectionsConnectionParserRuleCall_5_0_0; }
		
		//connections+=Connection*
		public Assignment getConnectionsAssignment_5_1() { return cConnectionsAssignment_5_1; }
		
		//Connection
		public RuleCall getConnectionsConnectionParserRuleCall_5_1_0() { return cConnectionsConnectionParserRuleCall_5_1_0; }
		
		//'</DataProvider>'
		public Keyword getDataProviderKeyword_6() { return cDataProviderKeyword_6; }
	}
	public class DataProcessorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v2.xtext.IDSL.DataProcessor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDataProcessorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDataProcessorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cSamplingRateKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSamplingRateAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cSamplingRateEIntParserRuleCall_3_1_0 = (RuleCall)cSamplingRateAssignment_3_1.eContents().get(0);
		private final Keyword cSamplingRateKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDataProvidersKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDataProvidersAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cDataProvidersDataProviderCrossReference_4_1_0 = (CrossReference)cDataProvidersAssignment_4_1.eContents().get(0);
		private final RuleCall cDataProvidersDataProviderEStringParserRuleCall_4_1_0_1 = (RuleCall)cDataProvidersDataProviderCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cDataProvidersAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final CrossReference cDataProvidersDataProviderCrossReference_4_2_1_0 = (CrossReference)cDataProvidersAssignment_4_2_1.eContents().get(0);
		private final RuleCall cDataProvidersDataProviderEStringParserRuleCall_4_2_1_0_1 = (RuleCall)cDataProvidersDataProviderCrossReference_4_2_1_0.eContents().get(1);
		private final Keyword cDataProvidersKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cOutputsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cOutputsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cOutputsOutputCrossReference_5_1_0 = (CrossReference)cOutputsAssignment_5_1.eContents().get(0);
		private final RuleCall cOutputsOutputEStringParserRuleCall_5_1_0_1 = (RuleCall)cOutputsOutputCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cCommaKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cOutputsAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final CrossReference cOutputsOutputCrossReference_5_2_1_0 = (CrossReference)cOutputsAssignment_5_2_1.eContents().get(0);
		private final RuleCall cOutputsOutputEStringParserRuleCall_5_2_1_0_1 = (RuleCall)cOutputsOutputCrossReference_5_2_1_0.eContents().get(1);
		private final Keyword cOutputsKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cDataAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cDataDataParserRuleCall_6_0_0 = (RuleCall)cDataAssignment_6_0.eContents().get(0);
		private final Assignment cDataAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cDataDataParserRuleCall_6_1_0 = (RuleCall)cDataAssignment_6_1.eContents().get(0);
		private final Keyword cDataProcessorKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//DataProcessor:
		//	{DataProcessor}
		//	'<DataProcessor>'
		//	name=EString ('<samplingRate>' samplingRate=EInt '</samplingRate>')? ('<dataProviders>'
		//	dataProviders+=[DataProvider|EString] ("," dataProviders+=[DataProvider|EString])* '</dataProviders>')? ('<outputs>'
		//	outputs+=[Output|EString] ("," outputs+=[Output|EString])* '</outputs>')? (data+=Data data+=Data*)?
		//	'</DataProcessor>';
		@Override public ParserRule getRule() { return rule; }
		
		//{DataProcessor}
		//'<DataProcessor>'
		//name=EString ('<samplingRate>' samplingRate=EInt '</samplingRate>')? ('<dataProviders>'
		//dataProviders+=[DataProvider|EString] ("," dataProviders+=[DataProvider|EString])* '</dataProviders>')? ('<outputs>'
		//outputs+=[Output|EString] ("," outputs+=[Output|EString])* '</outputs>')? (data+=Data data+=Data*)?
		//'</DataProcessor>'
		public Group getGroup() { return cGroup; }
		
		//{DataProcessor}
		public Action getDataProcessorAction_0() { return cDataProcessorAction_0; }
		
		//'<DataProcessor>'
		public Keyword getDataProcessorKeyword_1() { return cDataProcessorKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//('<samplingRate>' samplingRate=EInt '</samplingRate>')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'<samplingRate>'
		public Keyword getSamplingRateKeyword_3_0() { return cSamplingRateKeyword_3_0; }
		
		//samplingRate=EInt
		public Assignment getSamplingRateAssignment_3_1() { return cSamplingRateAssignment_3_1; }
		
		//EInt
		public RuleCall getSamplingRateEIntParserRuleCall_3_1_0() { return cSamplingRateEIntParserRuleCall_3_1_0; }
		
		//'</samplingRate>'
		public Keyword getSamplingRateKeyword_3_2() { return cSamplingRateKeyword_3_2; }
		
		//('<dataProviders>' dataProviders+=[DataProvider|EString] ("," dataProviders+=[DataProvider|EString])* '</dataProviders>'
		//)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'<dataProviders>'
		public Keyword getDataProvidersKeyword_4_0() { return cDataProvidersKeyword_4_0; }
		
		//dataProviders+=[DataProvider|EString]
		public Assignment getDataProvidersAssignment_4_1() { return cDataProvidersAssignment_4_1; }
		
		//[DataProvider|EString]
		public CrossReference getDataProvidersDataProviderCrossReference_4_1_0() { return cDataProvidersDataProviderCrossReference_4_1_0; }
		
		//EString
		public RuleCall getDataProvidersDataProviderEStringParserRuleCall_4_1_0_1() { return cDataProvidersDataProviderEStringParserRuleCall_4_1_0_1; }
		
		//("," dataProviders+=[DataProvider|EString])*
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }
		
		//dataProviders+=[DataProvider|EString]
		public Assignment getDataProvidersAssignment_4_2_1() { return cDataProvidersAssignment_4_2_1; }
		
		//[DataProvider|EString]
		public CrossReference getDataProvidersDataProviderCrossReference_4_2_1_0() { return cDataProvidersDataProviderCrossReference_4_2_1_0; }
		
		//EString
		public RuleCall getDataProvidersDataProviderEStringParserRuleCall_4_2_1_0_1() { return cDataProvidersDataProviderEStringParserRuleCall_4_2_1_0_1; }
		
		//'</dataProviders>'
		public Keyword getDataProvidersKeyword_4_3() { return cDataProvidersKeyword_4_3; }
		
		//('<outputs>' outputs+=[Output|EString] ("," outputs+=[Output|EString])* '</outputs>')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'<outputs>'
		public Keyword getOutputsKeyword_5_0() { return cOutputsKeyword_5_0; }
		
		//outputs+=[Output|EString]
		public Assignment getOutputsAssignment_5_1() { return cOutputsAssignment_5_1; }
		
		//[Output|EString]
		public CrossReference getOutputsOutputCrossReference_5_1_0() { return cOutputsOutputCrossReference_5_1_0; }
		
		//EString
		public RuleCall getOutputsOutputEStringParserRuleCall_5_1_0_1() { return cOutputsOutputEStringParserRuleCall_5_1_0_1; }
		
		//("," outputs+=[Output|EString])*
		public Group getGroup_5_2() { return cGroup_5_2; }
		
		//","
		public Keyword getCommaKeyword_5_2_0() { return cCommaKeyword_5_2_0; }
		
		//outputs+=[Output|EString]
		public Assignment getOutputsAssignment_5_2_1() { return cOutputsAssignment_5_2_1; }
		
		//[Output|EString]
		public CrossReference getOutputsOutputCrossReference_5_2_1_0() { return cOutputsOutputCrossReference_5_2_1_0; }
		
		//EString
		public RuleCall getOutputsOutputEStringParserRuleCall_5_2_1_0_1() { return cOutputsOutputEStringParserRuleCall_5_2_1_0_1; }
		
		//'</outputs>'
		public Keyword getOutputsKeyword_5_3() { return cOutputsKeyword_5_3; }
		
		//(data+=Data data+=Data*)?
		public Group getGroup_6() { return cGroup_6; }
		
		//data+=Data
		public Assignment getDataAssignment_6_0() { return cDataAssignment_6_0; }
		
		//Data
		public RuleCall getDataDataParserRuleCall_6_0_0() { return cDataDataParserRuleCall_6_0_0; }
		
		//data+=Data*
		public Assignment getDataAssignment_6_1() { return cDataAssignment_6_1; }
		
		//Data
		public RuleCall getDataDataParserRuleCall_6_1_0() { return cDataDataParserRuleCall_6_1_0; }
		
		//'</DataProcessor>'
		public Keyword getDataProcessorKeyword_7() { return cDataProcessorKeyword_7; }
	}
	public class DataTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v2.xtext.IDSL.DataType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDataComponentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cTypeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeTypeEnumRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		private final Keyword cTypeKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cDataComponentKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//DataType:
		//	'<dataComponent>'
		//	name=EString
		//	'<type>' type=Type '</type>'
		//	'</dataComponent>';
		@Override public ParserRule getRule() { return rule; }
		
		//'<dataComponent>'
		//name=EString
		//'<type>' type=Type '</type>'
		//'</dataComponent>'
		public Group getGroup() { return cGroup; }
		
		//'<dataComponent>'
		public Keyword getDataComponentKeyword_0() { return cDataComponentKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'<type>'
		public Keyword getTypeKeyword_2() { return cTypeKeyword_2; }
		
		//type=Type
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }
		
		//Type
		public RuleCall getTypeTypeEnumRuleCall_3_0() { return cTypeTypeEnumRuleCall_3_0; }
		
		//'</type>'
		public Keyword getTypeKeyword_4() { return cTypeKeyword_4; }
		
		//'</dataComponent>'
		public Keyword getDataComponentKeyword_5() { return cDataComponentKeyword_5; }
	}
	public class ConnectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v2.xtext.IDSL.Connection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cConnectionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cConnectionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDescriptionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDescriptionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDescriptionEStringParserRuleCall_3_1_0 = (RuleCall)cDescriptionAssignment_3_1.eContents().get(0);
		private final Keyword cDescriptionKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cParametersAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cParametersParameterParserRuleCall_4_0_0 = (RuleCall)cParametersAssignment_4_0.eContents().get(0);
		private final Assignment cParametersAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_4_1_0 = (RuleCall)cParametersAssignment_4_1.eContents().get(0);
		private final Keyword cConnectionKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Connection:
		//	{Connection}
		//	'<Connection>'
		//	name=EString ('<description>' description=EString '</description>')? (parameters+=Parameter parameters+=Parameter*)?
		//	'</Connection>';
		@Override public ParserRule getRule() { return rule; }
		
		//{Connection}
		//'<Connection>'
		//name=EString ('<description>' description=EString '</description>')? (parameters+=Parameter parameters+=Parameter*)?
		//'</Connection>'
		public Group getGroup() { return cGroup; }
		
		//{Connection}
		public Action getConnectionAction_0() { return cConnectionAction_0; }
		
		//'<Connection>'
		public Keyword getConnectionKeyword_1() { return cConnectionKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//('<description>' description=EString '</description>')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'<description>'
		public Keyword getDescriptionKeyword_3_0() { return cDescriptionKeyword_3_0; }
		
		//description=EString
		public Assignment getDescriptionAssignment_3_1() { return cDescriptionAssignment_3_1; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_3_1_0() { return cDescriptionEStringParserRuleCall_3_1_0; }
		
		//'</description>'
		public Keyword getDescriptionKeyword_3_2() { return cDescriptionKeyword_3_2; }
		
		//(parameters+=Parameter parameters+=Parameter*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_4_0() { return cParametersAssignment_4_0; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_4_0_0() { return cParametersParameterParserRuleCall_4_0_0; }
		
		//parameters+=Parameter*
		public Assignment getParametersAssignment_4_1() { return cParametersAssignment_4_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_4_1_0() { return cParametersParameterParserRuleCall_4_1_0; }
		
		//'</Connection>'
		public Keyword getConnectionKeyword_5() { return cConnectionKeyword_5; }
	}
	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v2.xtext.IDSL.Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParameterAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cParameterKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cContentKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cContentAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cContentEStringParserRuleCall_3_1_0 = (RuleCall)cContentAssignment_3_1.eContents().get(0);
		private final Keyword cContentKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Keyword cParameterKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Parameter:
		//	{Parameter}
		//	'<parameter>'
		//	name=EString ('<content>' content=EString '</content>')?
		//	'</parameter>';
		@Override public ParserRule getRule() { return rule; }
		
		//{Parameter}
		//'<parameter>'
		//name=EString ('<content>' content=EString '</content>')?
		//'</parameter>'
		public Group getGroup() { return cGroup; }
		
		//{Parameter}
		public Action getParameterAction_0() { return cParameterAction_0; }
		
		//'<parameter>'
		public Keyword getParameterKeyword_1() { return cParameterKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//('<content>' content=EString '</content>')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'<content>'
		public Keyword getContentKeyword_3_0() { return cContentKeyword_3_0; }
		
		//content=EString
		public Assignment getContentAssignment_3_1() { return cContentAssignment_3_1; }
		
		//EString
		public RuleCall getContentEStringParserRuleCall_3_1_0() { return cContentEStringParserRuleCall_3_1_0; }
		
		//'</content>'
		public Keyword getContentKeyword_3_2() { return cContentKeyword_3_2; }
		
		//'</parameter>'
		public Keyword getParameterKeyword_4() { return cParameterKeyword_4; }
	}
	
	public class TypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v2.xtext.IDSL.Type");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cStringEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cStringStringKeyword_0_0 = (Keyword)cStringEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cByteEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cByteByteKeyword_1_0 = (Keyword)cByteEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cShortEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cShortShortKeyword_2_0 = (Keyword)cShortEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cIntEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cIntIntKeyword_3_0 = (Keyword)cIntEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cLongEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cLongLongKeyword_4_0 = (Keyword)cLongEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cFloatEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cFloatFloatKeyword_5_0 = (Keyword)cFloatEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cDoubleEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cDoubleDoubleKeyword_6_0 = (Keyword)cDoubleEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cCharEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cCharCharKeyword_7_0 = (Keyword)cCharEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cBooleanEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cBooleanBooleanKeyword_8_0 = (Keyword)cBooleanEnumLiteralDeclaration_8.eContents().get(0);
		
		//enum Type:
		//	String | byte | short | int | long | float | double | char | boolean;
		public EnumRule getRule() { return rule; }
		
		//String | byte | short | int | long | float | double | char | boolean
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//String
		public EnumLiteralDeclaration getStringEnumLiteralDeclaration_0() { return cStringEnumLiteralDeclaration_0; }
		
		//'String'
		public Keyword getStringStringKeyword_0_0() { return cStringStringKeyword_0_0; }
		
		//byte
		public EnumLiteralDeclaration getByteEnumLiteralDeclaration_1() { return cByteEnumLiteralDeclaration_1; }
		
		//'byte'
		public Keyword getByteByteKeyword_1_0() { return cByteByteKeyword_1_0; }
		
		//short
		public EnumLiteralDeclaration getShortEnumLiteralDeclaration_2() { return cShortEnumLiteralDeclaration_2; }
		
		//'short'
		public Keyword getShortShortKeyword_2_0() { return cShortShortKeyword_2_0; }
		
		//int
		public EnumLiteralDeclaration getIntEnumLiteralDeclaration_3() { return cIntEnumLiteralDeclaration_3; }
		
		//'int'
		public Keyword getIntIntKeyword_3_0() { return cIntIntKeyword_3_0; }
		
		//long
		public EnumLiteralDeclaration getLongEnumLiteralDeclaration_4() { return cLongEnumLiteralDeclaration_4; }
		
		//'long'
		public Keyword getLongLongKeyword_4_0() { return cLongLongKeyword_4_0; }
		
		//float
		public EnumLiteralDeclaration getFloatEnumLiteralDeclaration_5() { return cFloatEnumLiteralDeclaration_5; }
		
		//'float'
		public Keyword getFloatFloatKeyword_5_0() { return cFloatFloatKeyword_5_0; }
		
		//double
		public EnumLiteralDeclaration getDoubleEnumLiteralDeclaration_6() { return cDoubleEnumLiteralDeclaration_6; }
		
		//'double'
		public Keyword getDoubleDoubleKeyword_6_0() { return cDoubleDoubleKeyword_6_0; }
		
		//char
		public EnumLiteralDeclaration getCharEnumLiteralDeclaration_7() { return cCharEnumLiteralDeclaration_7; }
		
		//'char'
		public Keyword getCharCharKeyword_7_0() { return cCharCharKeyword_7_0; }
		
		//boolean
		public EnumLiteralDeclaration getBooleanEnumLiteralDeclaration_8() { return cBooleanEnumLiteralDeclaration_8; }
		
		//'boolean'
		public Keyword getBooleanBooleanKeyword_8_0() { return cBooleanBooleanKeyword_8_0; }
	}
	
	private final IoTFrameworkElements pIoTFramework;
	private final ComponentElements pComponent;
	private final Component_ImplElements pComponent_Impl;
	private final EStringElements pEString;
	private final OutputElements pOutput;
	private final EIntElements pEInt;
	private final DataElements pData;
	private final DataProviderElements pDataProvider;
	private final DataProcessorElements pDataProcessor;
	private final DataTypeElements pDataType;
	private final TypeElements eType;
	private final ConnectionElements pConnection;
	private final ParameterElements pParameter;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public IDSLGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pIoTFramework = new IoTFrameworkElements();
		this.pComponent = new ComponentElements();
		this.pComponent_Impl = new Component_ImplElements();
		this.pEString = new EStringElements();
		this.pOutput = new OutputElements();
		this.pEInt = new EIntElements();
		this.pData = new DataElements();
		this.pDataProvider = new DataProviderElements();
		this.pDataProcessor = new DataProcessorElements();
		this.pDataType = new DataTypeElements();
		this.eType = new TypeElements();
		this.pConnection = new ConnectionElements();
		this.pParameter = new ParameterElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("n7.intern.v2.xtext.IDSL".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//IoTFramework:
	//	{IoTFramework}
	//	'<IoTFramework>'
	//	name=EString ('<description>' description=EString '</description>')? (components+=Component components+=Component*)?
	//	(outputs+=Output outputs+=Output*)?
	//	'</IoTFramework>';
	public IoTFrameworkElements getIoTFrameworkAccess() {
		return pIoTFramework;
	}
	
	public ParserRule getIoTFrameworkRule() {
		return getIoTFrameworkAccess().getRule();
	}
	
	//Component:
	//	Component_Impl | DataProvider | DataProcessor;
	public ComponentElements getComponentAccess() {
		return pComponent;
	}
	
	public ParserRule getComponentRule() {
		return getComponentAccess().getRule();
	}
	
	//Component_Impl Component:
	//	{Component}
	//	'<Component>'
	//	name=EString ('<samplingRate>' samplingRate=EInt '</samplingRate>')? (data+=Data data+=Data*)?
	//	'</Component>';
	public Component_ImplElements getComponent_ImplAccess() {
		return pComponent_Impl;
	}
	
	public ParserRule getComponent_ImplRule() {
		return getComponent_ImplAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Output:
	//	{Output}
	//	'<Output>'
	//	name=EString ('<description>' description=EString '</description>')? (parameters+=Parameter parameters+=Parameter*)?
	//	'</Output>';
	public OutputElements getOutputAccess() {
		return pOutput;
	}
	
	public ParserRule getOutputRule() {
		return getOutputAccess().getRule();
	}
	
	//EInt ecore::EInt:
	//	'-'? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//Data:
	//	{Data}
	//	'<data>'
	//	name=EString (dataTypes+=DataType dataTypes+=DataType*)? (data+=Data data+=Data*)?
	//	'</data>';
	public DataElements getDataAccess() {
		return pData;
	}
	
	public ParserRule getDataRule() {
		return getDataAccess().getRule();
	}
	
	//DataProvider:
	//	{DataProvider}
	//	'<DataProvider>'
	//	name=EString ('<samplingRate>' samplingRate=EInt '</samplingRate>')? (data+=Data data+=Data*)?
	//	(connections+=Connection connections+=Connection*)?
	//	'</DataProvider>';
	public DataProviderElements getDataProviderAccess() {
		return pDataProvider;
	}
	
	public ParserRule getDataProviderRule() {
		return getDataProviderAccess().getRule();
	}
	
	//DataProcessor:
	//	{DataProcessor}
	//	'<DataProcessor>'
	//	name=EString ('<samplingRate>' samplingRate=EInt '</samplingRate>')? ('<dataProviders>'
	//	dataProviders+=[DataProvider|EString] ("," dataProviders+=[DataProvider|EString])* '</dataProviders>')? ('<outputs>'
	//	outputs+=[Output|EString] ("," outputs+=[Output|EString])* '</outputs>')? (data+=Data data+=Data*)?
	//	'</DataProcessor>';
	public DataProcessorElements getDataProcessorAccess() {
		return pDataProcessor;
	}
	
	public ParserRule getDataProcessorRule() {
		return getDataProcessorAccess().getRule();
	}
	
	//DataType:
	//	'<dataComponent>'
	//	name=EString
	//	'<type>' type=Type '</type>'
	//	'</dataComponent>';
	public DataTypeElements getDataTypeAccess() {
		return pDataType;
	}
	
	public ParserRule getDataTypeRule() {
		return getDataTypeAccess().getRule();
	}
	
	//enum Type:
	//	String | byte | short | int | long | float | double | char | boolean;
	public TypeElements getTypeAccess() {
		return eType;
	}
	
	public EnumRule getTypeRule() {
		return getTypeAccess().getRule();
	}
	
	//Connection:
	//	{Connection}
	//	'<Connection>'
	//	name=EString ('<description>' description=EString '</description>')? (parameters+=Parameter parameters+=Parameter*)?
	//	'</Connection>';
	public ConnectionElements getConnectionAccess() {
		return pConnection;
	}
	
	public ParserRule getConnectionRule() {
		return getConnectionAccess().getRule();
	}
	
	//Parameter:
	//	{Parameter}
	//	'<parameter>'
	//	name=EString ('<content>' content=EString '</content>')?
	//	'</parameter>';
	public ParameterElements getParameterAccess() {
		return pParameter;
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
